---
import General from "../layouts/General.astro";
import Back from "../components/Back.astro";
import AddButton from "../components/AddButton.astro";


// constants
const URL = "https://ricardhernandez.com/api";

// if is not cookie redirect
if (!Astro.cookies.has("token")) {
  return Astro.redirect("/");
}

// to prepare security of fetchs and send a header with cookie
const token = Astro.cookies.get("token").value;

// to get id of logged user
let id = -1;
// fetch to refresh the page and check if cookie is valid
let invalidToken = false;
const refresh = await fetch(`${URL}/refresh`, {
  method: "GET",
  headers: {
    "Content-Type": "application/json",
    Authorization: `Bearer ${token}`,
  },
})
  .then((res) => res.json())
  .then((res) => {
    if (res.error) invalidToken = true;
    if (res.id) id = res.id;
  })
  .catch((err) => console.error(err));
// if invalid token then redirect
if (invalidToken) {
  return Astro.redirect("/");
}

let posts = [];
// fetch to get all posts of user clicked
try {
  let postsByUser = await fetch(URL + "/user/" + id + "/images", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });
  postsByUser = await postsByUser.json();
  posts = postsByUser.sort(
    (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
  );
} catch (error) {
  console.log(error);
}

// fetch all users
let allUsers;
const responseAllUsers = await fetch(`${URL}/allUsers`, {
  method: "GET",
  headers: {
    "Content-Type": "application/json",
    Authorization: `Bearer ${token}`,
  },
})
  .then((res) => res.json())
  .then((res) => {
    allUsers = res;
  })
  .catch((err) => console.error(err));

// this is a func helper for making hashtags clickable
function shiftHashtag(hashtag) {
  const array = hashtag.split("");
  array.shift();
  const str = array.join("");
  return str;
}

console.log(id);
---

<General>
  <Back url="/Home" />
  <div class="flex justify-center items-center gap-24">
    <h2
      class="text-2xl font-light bg-clip-text bg-gradient-to-r from-[#50525e] to-[#dadada] text-transparent"
    >
      {allUsers.find((user) => user.id === id).name}
    </h2>
    <div class="flex flex-col justify-center items-center">
      <p>{posts.length}</p>
      <p
        class="font-semibold bg-clip-text bg-gradient-to-r from-[#dadada] to-[#9598a5] text-transparent"
      >
        publicaciones
      </p>
    </div>
  </div>

  <ul class="w-11/12 mx-auto">
    {
      posts.map((post) => (
        <li class="relative h-[600px] flex flex-col justify-end my-7 bg-[#2f3138] rounded-lg shadow-xl">
          <div class=" flex-grow shrink-0">
            <div class="w-full h-full rounded-lg relative">
              <img
                class="absolute inset-0 object-fit size-full rounded-t-lg "
                src={`http://localhost:3000/uploads/resized/${post.filename}`}
              />
            </div>
          </div>
          <div class="min-h-24 py-2 px-3">
            <a href={`/users/${post.userId}`} class="text-lg ">
              {allUsers.find((user) => user.id === post.userId).name}
            </a>
            <div class="text-[15px] truncate line-clamp-2 text-wrap">
              {post.hashtags.split(" ").map((word) =>
                word.includes("#") ? (
                  <a
                    class="text-[#8e5cf5] text-medium"
                    href={`/hashtags/${word ? shiftHashtag(word) : ""}`}
                  >
                    {word + " "}
                  </a>
                ) : (
                  word + " "
                )
              )}
            </div>
          </div>
          <div class="absolute top-0 right-0">
            <button id="delete">Delete post</button>
            <button id="update">Edit comment</button>
          </div>
          <script>
            const deleteBtn = document.getElementById("delete")
            document.addEventListener('click', ()=> {

            })
          </script>
        </li>
      ))
    }
  </ul>
  <AddButton />
</General>
